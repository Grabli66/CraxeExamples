// Generated by Haxe 4.0.0-rc.2+175840a
#ifndef INCLUDED_ClassUser
#define INCLUDED_ClassUser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_8322c3ad4f734654_12_new)
HX_DECLARE_CLASS0(ClassUser)



class HXCPP_CLASS_ATTRIBUTES ClassUser_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ClassUser_obj OBJ_;
		ClassUser_obj();

	public:
		enum { _hx_ClassId = 0x1430b20f };

		void __construct(int id,::String name,::String email);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ClassUser")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ClassUser"); }

		hx::ObjectPtr< ClassUser_obj > __new(int id,::String name,::String email) {
			hx::ObjectPtr< ClassUser_obj > __this = new ClassUser_obj();
			__this->__construct(id,name,email);
			return __this;
		}

		static hx::ObjectPtr< ClassUser_obj > __alloc(hx::Ctx *_hx_ctx,int id,::String name,::String email) {
			ClassUser_obj *__this = (ClassUser_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ClassUser_obj), true, "ClassUser"));
			*(void **)__this = ClassUser_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_8322c3ad4f734654_12_new)
HXLINE(  13)		( ( ::ClassUser)(__this) )->id = id;
HXLINE(  14)		( ( ::ClassUser)(__this) )->name = name;
HXLINE(  15)		( ( ::ClassUser)(__this) )->email = email;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ClassUser_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ClassUser",83,92,be,82); }

		int id;
		::String name;
		::String email;
};


#endif /* INCLUDED_ClassUser */ 
