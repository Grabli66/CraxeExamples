// Generated by Haxe 4.0.0-rc.2+175840a
#ifndef INCLUDED_TypedefTest
#define INCLUDED_TypedefTest

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TypedefTest)



class HXCPP_CLASS_ATTRIBUTES TypedefTest_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TypedefTest_obj OBJ_;
		TypedefTest_obj();

	public:
		enum { _hx_ClassId = 0x48999739 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="TypedefTest")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"TypedefTest"); }

		hx::ObjectPtr< TypedefTest_obj > __new() {
			hx::ObjectPtr< TypedefTest_obj > __this = new TypedefTest_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TypedefTest_obj > __alloc(hx::Ctx *_hx_ctx) {
			TypedefTest_obj *__this = (TypedefTest_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TypedefTest_obj), false, "TypedefTest"));
			*(void **)__this = TypedefTest_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TypedefTest_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TypedefTest",1d,c5,d2,99); }

		static void test(::Array< ::Dynamic> arr);
		static ::Dynamic test_dyn();

		static void main();
		static ::Dynamic main_dyn();

};


#endif /* INCLUDED_TypedefTest */ 
