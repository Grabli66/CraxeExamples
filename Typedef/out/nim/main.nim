# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    Admin = ref object of HaxeObject
        email:string
        id:int
        level:int
        name:string

    AdminAnon = object
        obj:ref HaxeObject
        email:ptr string
        id:ptr int
        level:ptr int
        name:ptr string

    User = ref object of HaxeObject
        email:string
        id:int
        name:string

    UserAnon = object
        obj:ref HaxeObject
        email:ptr string
        id:ptr int
        name:ptr string

proc toAdminAnon[T](this:T):AdminAnon {.inline.} =
    AdminAnon(obj:this, email:addr this.email, id:addr this.id, level:addr this.level, name:addr this.name)

proc toUserAnon[T](this:T):UserAnon {.inline.} =
    UserAnon(obj:this, email:addr this.email, id:addr this.id, name:addr this.name)


type 
    ClassUser = ref object of HaxeObject
        id : int
        name : string
        email : string
        level : int

    TypedefTest = ref object of HaxeObject

    TypedefTestStatic = object of HaxeObject


let TypedefTestStaticInst = TypedefTestStatic()

proc initClassUser(this:ClassUser, id:int, name:string, email:string, level:int) {.inline.} =
    this.id = id
    this.name = name
    this.email = email

proc newClassUser(id:int, name:string, email:string, level:int) : ClassUser {.inline.} =
    result = ClassUser()
    initClassUser(result, id, name, email, level)

proc `$`(this:ClassUser) : string {.inline.} = 
    result = "ClassUser" & $this[]

proc traceArray(this:TypedefTestStatic, arr:HaxeArray[UserAnon]) : void =
    var locg = 0
    while locg < arr.length:
        var it = arr[locg]
        bpOperator(locg)
        LogStaticInst.trace(it.name[], "src/TypedefTest.hx", 30, "TypedefTest", "traceArray")


proc testAdmin(this:TypedefTestStatic, adm:AdminAnon) : void =
    LogStaticInst.trace(adm.name[], "src/TypedefTest.hx", 35, "TypedefTest", "testAdmin")

proc getArray(this:TypedefTestStatic, size:int) : HaxeArray[UserAnon] =
    var arr = newHaxeArray[UserAnon]()
    var locg = 0
    var locg1 = size
    while locg < locg1:
        var i = apOperator(locg)
        discard arr.push(toUserAnon(User(id: i, name: "batman_" + $(i), email: "batman@gmail.com" + $(i))))

    return arr

proc main(this:TypedefTestStatic) : void =
    var arr = TypedefTestStaticInst.getArray(10)
    var cls = newClassUser(1, "Robin", "robin@gmail.com", 33)
    discard arr.push(toUserAnon(cls))
    TypedefTestStaticInst.traceArray(arr)
    TypedefTestStaticInst.testAdmin(toAdminAnon(cls))
    LogStaticInst.trace(arr.length, "src/TypedefTest.hx", 56, "TypedefTest", "main")

proc `$`(this:TypedefTest) : string {.inline.} = 
    result = "TypedefTest" & $this[]

TypedefTestStaticInst.main()