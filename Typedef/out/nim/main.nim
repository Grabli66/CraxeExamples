# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    User = object
        email:string
        id:int
        name:string

    OtherUser = tuple
        id:int
        name:string

    Admin = tuple
        email:string
        id:int
        level:int
        name:string

    SomeProc = proc():string
    SomeInt = int
    SomeUser = ClassUser

type 
    ClassUser = ref object of RootObj
        id : int
        name : string
        email : string

    TypedefTest = ref object of RootObj

    TypedefTestStatic = object of RootObj


let TypedefTestStaticInst = TypedefTestStatic()

proc initClassUser(this:ClassUser, id:int, name:string, email:string) {.inline.} =
    this.id = id
    this.name = name
    this.email = email

proc newClassUser(id:int, name:string, email:string) : ClassUser {.inline.} =
    result = ClassUser()
    initClassUser(result, id, name, email)

proc `$`(this:ClassUser) : string {.inline.} = 
    result = "ClassUser" & $this[]

proc main(this:TypedefTestStatic) : void =
    var user = User(id:33, name:"""Batman""", email:"""batman@batman.com""")
    var arr = newHaxeArray[tuple[email:string, id:int, name:string]]()
    discard arr.push((
        email:user.email,
        id:user.id,
        name:user.name
    ))
    var el = arr.get(0)
    el.name = "Superman";

    echo el
    echo user
    echo arr

proc `$`(this:TypedefTest) : string {.inline.} = 
    result = "TypedefTest" & $this[]

TypedefTestStaticInst.main()