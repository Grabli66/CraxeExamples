# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    User = ref object of RootObj
        email:string
        id:int
        name:string

    UserAnon = object
        obj:ref RootObj
        email:ptr string
        id:ptr int
        name:ptr string

template toUserAnon[T](this:T):UserAnon =
    UserAnon(obj:this, email:addr this.email, id:addr this.id, name:addr this.name)

type 
    ClassUser = ref object of RootObj
        id : int
        name : string
        email : string

    TypedefTest = ref object of RootObj

    TypedefTestStatic = object of RootObj


let TypedefTestStaticInst = TypedefTestStatic()

proc initClassUser(this:ClassUser, id:int, name:string, email:string) {.inline.} =
    this.id = id
    this.name = name
    this.email = email

proc newClassUser(id:int, name:string, email:string) : ClassUser {.inline.} =
    result = ClassUser()
    initClassUser(result, id, name, email)

proc `$`(this:ClassUser) : string {.inline.} = 
    result = "ClassUser" & $this[]

proc test(this:TypedefTestStatic, arr:HaxeArray[UserAnon]) : void =
    var locg = 0
    while locg < arr.length:
        var it = arr[locg]
        bpOperator(locg)
        LogStaticInst.trace(it.name[], "src/TypedefTest.hx", 22, "TypedefTest", "test")


proc main(this:TypedefTestStatic) : void =
    var admin = toUserAnon(User(id:33, name:"Batman", email:"batman@batman.com"))
    var arr = newHaxeArray[UserAnon]()
    discard arr.push(admin)
    var clsUser = newClassUser(44, "Superman", "super@gmail.com")
    discard arr.push(toUserAnon(clsUser))
    discard arr.push(toUserAnon(User(email:"good", id:11, name:"GOOD")))
    TypedefTestStaticInst.test(arr)

proc `$`(this:TypedefTest) : string {.inline.} = 
    result = "TypedefTest" & $this[]

TypedefTestStaticInst.main()