# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    Test1 = ref object of HaxeObject

    Test2 = ref object of HaxeObject

    Test3 = ref object of HaxeObject

    AutoDiscardTest = ref object of HaxeObject

    AutoDiscardTestStatic = object of HaxeObject


let AutoDiscardTestStaticInst = AutoDiscardTestStatic()

proc initTest1(this:Test1) {.inline.} =
    discard

proc newTest1() : Test1 {.inline.} =
    result = Test1()
    initTest1(result)

proc call1(this:Test1, id:string) : Test2 =
    return newTest2()

proc `$`(this:Test1) : string {.inline.} = 
    result = "Test1" & $this[]

proc initTest2(this:Test2) {.inline.} =
    discard

proc newTest2() : Test2 {.inline.} =
    result = Test2()
    initTest2(result)

proc call2(this:Test2, name:string) : Test3 =
    return newTest3()

proc `$`(this:Test2) : string {.inline.} = 
    result = "Test2" & $this[]

proc initTest3(this:Test3) {.inline.} =
    discard

proc newTest3() : Test3 {.inline.} =
    result = Test3()
    initTest3(result)

proc call3(this:Test3, email:string) : string =
    return "GOOD"

proc call4(this:Test3) : void =
    LogStaticInst.trace("Hello", "src/AutoDiscardTest.hx", 25, "Test3", "call4")

proc `$`(this:Test3) : string {.inline.} = 
    result = "Test3" & $this[]

proc main(this:AutoDiscardTestStatic) : void =
    var tst1 = newTest1()
    discard tst1.call1("33").call2("Batman").call3("batman@gmail.com")
    tst1.call1("44").call2("Superman").call4()

proc `$`(this:AutoDiscardTest) : string {.inline.} = 
    result = "AutoDiscardTest" & $this[]

AutoDiscardTestStaticInst.main()