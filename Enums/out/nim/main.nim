# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    MyValue = ref object of HaxeEnum

    MyValueSome = ref object of MyValue
        v : int
        s : string
        arg : HaxeArray[int]

    MyValueRec = ref object of MyValue
        v : MyValue

    MyValueNone = ref object of MyValue

    MyValueInt = ref object of MyValue
        v : int

    MyValueFloat = ref object of MyValue
        v : float


proc newMyValueSome(v:int, s:string, arg:HaxeArray[int]) : MyValueSome {.inline.} =
    MyValueSome(index: 3, v: v, s: s, arg: arg)

proc `$`(this: MyValueSome) : string {.inline.} =
    result = $this[]

proc `==`(e1:MyValueSome, e2:MyValueSome) : bool {.inline.} =
    result = e1[] == e2[]

proc newMyValueRec(v:MyValue) : MyValueRec {.inline.} =
    MyValueRec(index: 4, v: v)

proc `$`(this: MyValueRec) : string {.inline.} =
    result = $this[]

proc `==`(e1:MyValueRec, e2:MyValueRec) : bool {.inline.} =
    result = e1[] == e2[]

proc newMyValueNone() : MyValueNone {.inline.} =
    MyValueNone(index: 0)

proc `$`(this: MyValueNone) : string {.inline.} =
    result = $this[]

proc `==`(e1:MyValueNone, e2:MyValueNone) : bool {.inline.} =
    result = e1[] == e2[]

proc newMyValueInt(v:int) : MyValueInt {.inline.} =
    MyValueInt(index: 1, v: v)

proc `$`(this: MyValueInt) : string {.inline.} =
    result = $this[]

proc `==`(e1:MyValueInt, e2:MyValueInt) : bool {.inline.} =
    result = e1[] == e2[]

proc newMyValueFloat(v:float) : MyValueFloat {.inline.} =
    MyValueFloat(index: 2, v: v)

proc `$`(this: MyValueFloat) : string {.inline.} =
    result = $this[]

proc `==`(e1:MyValueFloat, e2:MyValueFloat) : bool {.inline.} =
    result = e1[] == e2[]

type 
    EnumTest = ref object of RootObj

    EnumTestStatic = ref object of RootObj

let EnumTestStaticInst = EnumTestStatic()

proc main(this:EnumTestStatic) : void =
    var res = newHaxeArray[MyValue]()
    var locg = 0
    while locg < 1000000:
        var i = apOperator(locg)
        res.push(newMyValueRec(newMyValueFloat(33)))

    LogStaticInst.trace(res.length, "src/EnumTest.hx", 28, "EnumTest", "main")

proc `$`(this:EnumTest) : string {.inline.} = 
    result = "EnumTest" & $this[]

EnumTestStaticInst.main()