# Generated by Haxe 4.0.0-rc.2+175840a
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    SomeKey = ref object of HaxeObject
        key : string
        hash : proc():int

    MapTest = ref object of HaxeObject

    MapTestStatic = object of HaxeObject


let MapTestStaticInst = MapTestStatic()

proc initSomeKey(this:SomeKey, key:string) {.inline.} =
    this.hash = proc():int = this.hashCode()
    this.key = key

proc newSomeKey(key:string) : SomeKey {.inline.} =
    result = SomeKey()
    initSomeKey(result, key)

proc hashCode(this:SomeKey) : int =
    return this.key.length

proc `$`(this:SomeKey) : string {.inline.} = 
    result = "SomeKey" & $this[]

proc main(this:MapTestStatic) : void =
    var objmap = newObjectMap[SomeKey, Int]()
    var k = newSomeKey("batman")
    objmap.set(k, 33)
    var k1 = newSomeKey("superman")
    objmap.set(k1, 44)
    let s = objmap.get(newSomeKey("bat"))
    echo s

proc `$`(this:MapTest) : string {.inline.} = 
    result = "MapTest" & $this[]

MapTestStaticInst.main()