# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    Hashable = concept x
        x.hash is proc():int

    SomeKey = ref object of HaxeObject
        key : string
        hash*: proc():int

    MapTest = ref object of HaxeObject

    MapTestStatic = object of HaxeObject

let MapTestStaticInst = MapTestStatic()

proc hash*(this:Hashable):int =
    this.hash()

proc `==`*(v1:Hashable, v2:Hashable):bool =
    v1.hash == v2.hash

proc initSomeKey(this:SomeKey, key:string) {.inline.} =
    this.key = key
    this.hash = proc():int = 3

proc newSomeKey(key:string) : SomeKey {.inline.} =
    result = SomeKey()
    initSomeKey(result, key)

proc `$`(this:SomeKey) : string {.inline.} = 
    result = "SomeKey" & $this[]

proc main(this:MapTestStatic) : void =
    var objmap = newObjectMap[SomeKey, string]()
    var k = newSomeKey("batman")
    objmap.set(k, "batman@gmail.com")
    echo objmap.get(newSomeKey("batman"))

proc `$`(this:MapTest) : string {.inline.} = 
    result = "MapTest" & $this[]

MapTestStaticInst.main()