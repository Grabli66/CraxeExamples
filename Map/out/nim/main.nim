# Generated by Haxe 4.0.0-rc.2+77068e10c
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    SomeKey = ref object of HaxeObject
        key : string
        hash : proc():int

    MapTest = ref object of HaxeObject

    MapTestStatic = object of HaxeObject


let MapTestStaticInst = MapTestStatic()

proc initSomeKey(this:SomeKey, key:string) {.inline.} =
    this.hash = proc():int = this.hashCode()
    this.key = key

proc newSomeKey(key:string) : SomeKey {.inline.} =
    result = SomeKey()
    initSomeKey(result, key)

proc hashCode(this:SomeKey) : int =
    return this.key.length

proc `$`(this:SomeKey) : string {.inline.} = 
    result = "SomeKey" & $this[]

proc main(this:MapTestStatic) : void =
    var stringmap = newStringMap[string]()
    stringmap.set("batman", "batman@gmail.com")
    stringmap.set("superman", "superman@gmail.com")
    LogStaticInst.trace(stringmap.toString(), "src/MapTest.hx", 20, "MapTest", "main")
    LogStaticInst.trace(stringmap.get("batman"), "src/MapTest.hx", 21, "MapTest", "main")
    var intmap = newIntMap[string]()
    intmap.set(33, "batman")
    intmap.set(44, "superman")
    LogStaticInst.trace(intmap.toString(), "src/MapTest.hx", 26, "MapTest", "main")
    LogStaticInst.trace(intmap.get(33), "src/MapTest.hx", 27, "MapTest", "main")
    LogStaticInst.trace(intmap.get(34), "src/MapTest.hx", 28, "MapTest", "main")
    var objmap = newObjectMap[SomeKey, string]()
    var k = newSomeKey("batman")
    objmap.set(k, "batman@gmail.com")
    var k1 = newSomeKey("superman")
    objmap.set(k1, "superman@gmail.com")
    var eq = (block:
        var key = newSomeKey("batman")
        objmap.get(key)
    ) == (block:
        var key1 = newSomeKey("batman")
        objmap.get(key1)
    )
    LogStaticInst.trace(eq, "src/MapTest.hx", 34, "MapTest", "main")
    var some = (block:
        var key2 = newSomeKey("batman")
        objmap.get(key2)
    )
    LogStaticInst.trace(some, "src/MapTest.hx", 37, "MapTest", "main")
    if some == "batman@gmail.com":
        LogStaticInst.trace("EQUALS", "src/MapTest.hx", 39, "MapTest", "main")
    else:
        LogStaticInst.trace("NOT EQUALS", "src/MapTest.hx", 41, "MapTest", "main")
    var some1 = (block:
        var key3 = newSomeKey("bat")
        objmap.get(key3)
    )
    LogStaticInst.trace(some1, "src/MapTest.hx", 45, "MapTest", "main")
    if some1 == "batman@gmail.com":
        LogStaticInst.trace("EQUALS", "src/MapTest.hx", 47, "MapTest", "main")
    else:
        LogStaticInst.trace("NOT EQUALS", "src/MapTest.hx", 49, "MapTest", "main")
    var map = (block:
        var locg = newStringMap[int]()
        locg.set("Earth", 33)
        locg.set("Mars", 44)
        locg
    )
    LogStaticInst.trace(map.toString(), "src/MapTest.hx", 57, "MapTest", "main")

proc `$`(this:MapTest) : string {.inline.} = 
    result = "MapTest" & $this[]

MapTestStaticInst.main()