# Generated by Haxe 4.0.0-rc.2+175840a
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    SomeKey = ref object of RootObj
        key : string

    MapTest = ref object of RootObj

    MapTestStatic = object of RootObj


let MapTestStaticInst = MapTestStatic()

proc initSomeKey(this:SomeKey, key:string) {.inline.} =
    this.key = key

proc newSomeKey(key:string) : SomeKey {.inline.} =
    result = SomeKey()
    initSomeKey(result, key)

proc `$`(this:SomeKey) : string {.inline.} = 
    result = "SomeKey" & $this[]

proc main(this:MapTestStatic) : void =
    var objmap = newObjectMap[SomeKey, string]()
    var k = newSomeKey("batman")
    objmap.set(k, "batman@gmail.com")
    var k1 = newSomeKey("superman")
    objmap.set(k1, "superman@gmail.com")
    var eq = (block:
        var key = newSomeKey("batman")
        objmap.get(key)
    ) == (block:
        var key1 = newSomeKey("batman")
        objmap.get(key1)
    )
    LogStaticInst.trace(eq, "src/MapTest.hx", 28, "MapTest", "main")

proc `$`(this:MapTest) : string {.inline.} = 
    result = "MapTest" & $this[]

MapTestStaticInst.main()