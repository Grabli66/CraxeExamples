// Generated by Haxe 4.0.0-rc.2+175840a
#ifndef INCLUDED_MapTest
#define INCLUDED_MapTest

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(MapTest)



class HXCPP_CLASS_ATTRIBUTES MapTest_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MapTest_obj OBJ_;
		MapTest_obj();

	public:
		enum { _hx_ClassId = 0x56fb390a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="MapTest")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"MapTest"); }

		hx::ObjectPtr< MapTest_obj > __new() {
			hx::ObjectPtr< MapTest_obj > __this = new MapTest_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MapTest_obj > __alloc(hx::Ctx *_hx_ctx) {
			MapTest_obj *__this = (MapTest_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MapTest_obj), false, "MapTest"));
			*(void **)__this = MapTest_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MapTest_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MapTest",ee,a4,46,ff); }

		static void main();
		static ::Dynamic main_dyn();

};


#endif /* INCLUDED_MapTest */ 
