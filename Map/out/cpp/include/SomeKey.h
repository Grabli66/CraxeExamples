// Generated by Haxe 4.0.0-rc.2+175840a
#ifndef INCLUDED_SomeKey
#define INCLUDED_SomeKey

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_ecf7865f390e3880_7_new)
HX_DECLARE_CLASS0(SomeKey)



class HXCPP_CLASS_ATTRIBUTES SomeKey_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SomeKey_obj OBJ_;
		SomeKey_obj();

	public:
		enum { _hx_ClassId = 0x3a702b07 };

		void __construct(::String key);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="SomeKey")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"SomeKey"); }

		hx::ObjectPtr< SomeKey_obj > __new(::String key) {
			hx::ObjectPtr< SomeKey_obj > __this = new SomeKey_obj();
			__this->__construct(key);
			return __this;
		}

		static hx::ObjectPtr< SomeKey_obj > __alloc(hx::Ctx *_hx_ctx,::String key) {
			SomeKey_obj *__this = (SomeKey_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SomeKey_obj), true, "SomeKey"));
			*(void **)__this = SomeKey_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_ecf7865f390e3880_7_new)
HXDLIN(   7)		( ( ::SomeKey)(__this) )->key = key;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SomeKey_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SomeKey",eb,96,bb,e2); }

		::String key;
		int hashCode();
		::Dynamic hashCode_dyn();

};


#endif /* INCLUDED_SomeKey */ 
