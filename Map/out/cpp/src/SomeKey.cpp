// Generated by Haxe 4.0.0-rc.2+175840a
#include <hxcpp.h>

#ifndef INCLUDED_SomeKey
#include <SomeKey.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ecf7865f390e3880_7_new,"SomeKey","new",0xe524895d,"SomeKey.new","MapTest.hx",7,0x54ebe690)
HX_LOCAL_STACK_FRAME(_hx_pos_ecf7865f390e3880_11_hashCode,"SomeKey","hashCode",0x83539dfe,"SomeKey.hashCode","MapTest.hx",11,0x54ebe690)

void SomeKey_obj::__construct(::String key){
            	HX_STACKFRAME(&_hx_pos_ecf7865f390e3880_7_new)
HXDLIN(   7)		this->key = key;
            	}

Dynamic SomeKey_obj::__CreateEmpty() { return new SomeKey_obj; }

void *SomeKey_obj::_hx_vtable = 0;

Dynamic SomeKey_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SomeKey_obj > _hx_result = new SomeKey_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SomeKey_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3a702b07;
}

int SomeKey_obj::hashCode(){
            	HX_STACKFRAME(&_hx_pos_ecf7865f390e3880_11_hashCode)
HXDLIN(  11)		return this->key.length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SomeKey_obj,hashCode,return )


SomeKey_obj::SomeKey_obj()
{
}

void SomeKey_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SomeKey);
	HX_MARK_MEMBER_NAME(key,"key");
	HX_MARK_END_CLASS();
}

void SomeKey_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(key,"key");
}

hx::Val SomeKey_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"key") ) { return hx::Val( key ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hashCode") ) { return hx::Val( hashCode_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val SomeKey_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"key") ) { key=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SomeKey_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("key",9f,89,51,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo SomeKey_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(SomeKey_obj,key),HX_("key",9f,89,51,00)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *SomeKey_obj_sStaticStorageInfo = 0;
#endif

static ::String SomeKey_obj_sMemberFields[] = {
	HX_("key",9f,89,51,00),
	HX_("hashCode",1b,0c,75,07),
	::String(null()) };

hx::Class SomeKey_obj::__mClass;

void SomeKey_obj::__register()
{
	SomeKey_obj _hx_dummy;
	SomeKey_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("SomeKey",eb,96,bb,e2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SomeKey_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SomeKey_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SomeKey_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SomeKey_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

