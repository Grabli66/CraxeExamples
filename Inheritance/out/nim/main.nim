# Generated by Haxe 4.0.0-rc.2+175840a
# Hail to Mighty CRAXE!!!

{.experimental: "codeReordering".}

import nimboot

type 
    User = ref object of RootObj
        id : int
        name : string

    GameUser = ref object of RootObj
        scores : int

    Inheritance = ref object of RootObj

    InheritanceStatic = ref object of RootObj

let InheritanceStaticInst = InheritanceStatic()

proc newUser(id:int, name:string) : User {.inline.} =
    let this = User()
    result = this
    this.id = id
    this.name = name

proc getKey(this:User) : string =
    return "" + StdStaticInst.string(this.id) + "_" + this.name

proc `$`(this:User) : string {.inline.} = 
    result = "User" & $this[]

proc newGameUser(id:int, name:string, scores:int) : GameUser {.inline.} =
    let this = GameUser()
    result = this
    super(id, name)
    this.scores = scores

proc incScore(this:GameUser, v:int) : int =
    return bpOperator(this.scores)

proc `$`(this:GameUser) : string {.inline.} = 
    result = "GameUser" & $this[]

proc main(this:InheritanceStatic) : void =
    var user = newGameUser(1, "Bamtan", 100)
    var key = user.getKey()
    LogStaticInst.trace(key, "src/Inheritance.hx", 32, "Inheritance", "main")
    var scores = user.incScore(1)
    LogStaticInst.trace(scores, "src/Inheritance.hx", 34, "Inheritance", "main")

proc `$`(this:Inheritance) : string {.inline.} = 
    result = "Inheritance" & $this[]

InheritanceStaticInst.main()